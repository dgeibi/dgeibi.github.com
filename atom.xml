<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[dgeibi's blog]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="https://dgeibi.github.io/"/>
  <updated>2016-02-02T08:10:48.273Z</updated>
  <id>https://dgeibi.github.io/</id>
  
  <author>
    <name><![CDATA[dgeibi]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[解决恶劣环境下 Ubuntu 更新源 Hash Sum mismatch 错误]]></title>
    <link href="https://dgeibi.github.io/2015/12/02/fix-apt-hash/"/>
    <id>https://dgeibi.github.io/2015/12/02/fix-apt-hash/</id>
    <published>2015-12-02T06:00:40.000Z</published>
    <updated>2016-02-02T08:10:48.273Z</updated>
    <content type="html"><![CDATA[<p>清除缓存 <code>sudo apt-get clean</code></p>
<p>使用 HTTPS 的软件源：修改 <code>/etc/apt/sources.list</code> 中的网址成</p>
<p><code>https://mirrors.ustc.edu.cn/ubuntu</code>，执行 <code>sudo apt-get update</code></p>
<a id="more"></a>
<p>也可以使用代理</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get -o Acquire::http::proxy=<span class="string">'http://yourproxyaddress:proxyport/'</span> update</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/apt/apt.conf</span><br><span class="line">-----</span><br><span class="line">Acquire::http::Proxy <span class="string">"http://yourproxyaddress:proxyport"</span>;</span><br><span class="line">-----</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>清除缓存 <code>sudo apt-get clean</code></p>
<p>使用 HTTPS 的软件源：修改 <code>/etc/apt/sources.list</code> 中的网址成</p>
<p><code>https://mirrors.ustc.edu.cn/ubuntu</code>，执行 <code>sudo apt-get update</code></p>]]>
    
    </summary>
    
      <category term="Network" scheme="https://dgeibi.github.io/tags/Network/"/>
    
      <category term="Ubuntu" scheme="https://dgeibi.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[设置终端下的代理]]></title>
    <link href="https://dgeibi.github.io/2015/11/25/terminal-proxy/"/>
    <id>https://dgeibi.github.io/2015/11/25/terminal-proxy/</id>
    <published>2015-11-25T05:33:40.000Z</published>
    <updated>2016-02-02T09:03:24.110Z</updated>
    <content type="html"><![CDATA[<h2 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h2><p><a href="http://segmentfault.com/q/1010000000118837/a-1020000000132541" target="_blank" rel="external">如何为 Git 设置代理？</a></p>
<p><a href="https://wiki.archlinux.org/index.php/Proxy_settings" target="_blank" rel="external">Proxy settings - ArchWiki</a></p>
<h2 id="u5B89_u88C5_Connect"><a href="#u5B89_u88C5_Connect" class="headerlink" title="安装 Connect"></a>安装 <a href="https://bitbucket.org/gotoh/connect/wiki/Home" target="_blank" rel="external">Connect</a></h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install connect-proxy</span><br></pre></td></tr></table></figure>
<h2 id="git__u534F_u8BAE_u7684_u914D_u7F6E"><a href="#git__u534F_u8BAE_u7684_u914D_u7F6E" class="headerlink" title="git 协议的配置"></a>git 协议的配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /usr/bin/gitproxy</span><br><span class="line">-----</span><br><span class="line"><span class="shebang">#!/bin/sh</span></span><br><span class="line">connect -H <span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">7070</span> <span class="string">"<span class="variable">$@</span>"</span></span><br><span class="line">-----</span><br><span class="line">sudo chmod +x /usr/bin/gitproxy</span><br><span class="line">git config --global core.gitproxy gitproxy</span><br></pre></td></tr></table></figure>
<p><code>-H</code> 表示 HTTP 协议，将 <code>-H</code> 改成 <code>-S</code> 可以用 SOCKS5 协议。</p>
<h2 id="HTTP__u534F_u8BAE_u7684_u914D_u7F6E"><a href="#HTTP__u534F_u8BAE_u7684_u914D_u7F6E" class="headerlink" title="HTTP 协议的配置"></a>HTTP 协议的配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vi ~/.bashrc</span><br><span class="line"><span class="comment">#在最后添加以下内容</span></span><br><span class="line"><span class="built_in">export</span> http_proxy=http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">7070</span>/</span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="variable">$http_proxy</span></span><br><span class="line"><span class="built_in">export</span> ftp_proxy=<span class="variable">$http_proxy</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h2><p><a href="http://segmentfault.com/q/1010000000118837/]]>
    </summary>
    
      <category term="Network" scheme="https://dgeibi.github.io/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[OpenWrt + 校园网]]></title>
    <link href="https://dgeibi.github.io/2015/11/19/openwrt-h3c/"/>
    <id>https://dgeibi.github.io/2015/11/19/openwrt-h3c/</id>
    <published>2015-11-19T15:59:55.000Z</published>
    <updated>2016-02-02T09:09:22.351Z</updated>
    <content type="html"><![CDATA[<h2 id="u53C2_u8003_u8D44_u6599"><a href="#u53C2_u8003_u8D44_u6599" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://wiki.openwrt.org/doc/howto/buildroot.exigence" target="_blank" rel="external">OpenWrt build system – Installation</a></p>
<p><a href="http://young523.com/?p=102" target="_blank" rel="external">自己编译集成了shadowsocks的openwrt固件</a></p>
<p><a href="http://www.7forz.com/1973/" target="_blank" rel="external">【详细教程】编译openwrt + njit-client 1.3，通过iNode认证</a></p>
<h2 id="u9009_u8D2D_u8DEF_u7531_u5668"><a href="#u9009_u8D2D_u8DEF_u7531_u5668" class="headerlink" title="选购路由器"></a>选购路由器</h2><p>配置挺高，实惠的 Newifi Mini 受 OpenWrt 官方支持，可参照 <a href="https://linuxtoy.org/archives/install-openwrt-on-newifi-mini.html" target="_blank" rel="external">Newifi Mini 安装 OpenWrt</a> 刷入固件</p>
<p>注：刷 OpenWrt 的最低配置是 4MB Flash、32MB RAM</p>
<p>没钱就买某宝上已经刷好 OpenWrt 的 TP-Link wr740N、 wr841n，价格一般在 30-40 RMB 之间，它们的cpu都是 ar71xx 系列</p>
<a id="more"></a>
<h2 id="u7F16_u8BD1_u56FA_u4EF6_28_u53EF_u9009_29_u548C_ipk"><a href="#u7F16_u8BD1_u56FA_u4EF6_28_u53EF_u9009_29_u548C_ipk" class="headerlink" title="编译固件(可选)和 ipk"></a>编译固件(可选)和 ipk</h2><p>准备编译</p>
<p>以 Ubuntu 为例</p>
<p>操作过程中可能遇到网络问题，可参考以下解决方案</p>
<p><a href="/2015/11/25/terminal-proxy/">设置终端下的代理</a></p>
<p><a href="/2015/12/02/fix-apt-hash/">解决恶劣环境下 Ubuntu 更新源 Hash Sum mismatch 错误</a></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install build-essential subversion libncurses5-dev zlib1g-dev gawk gcc-multilib flex git-core gettext libssl-dev</span><br></pre></td></tr></table></figure>
<p>获取 OpenWrt 代码树</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开发版</span></span><br><span class="line">git <span class="built_in">clone</span> git://git.openwrt.org/openwrt.git</span><br><span class="line"><span class="comment">#或稳定版（如 Chaos Calmer 15.05）</span></span><br><span class="line">git <span class="built_in">clone</span> git://git.openwrt.org/<span class="number">15.05</span>/openwrt.git</span><br><span class="line"><span class="built_in">cd</span> openwrt</span><br><span class="line">./scripts/feeds update <span class="operator">-a</span></span><br><span class="line">./scripts/feeds install <span class="operator">-a</span></span><br></pre></td></tr></table></figure>
<p>获取 <a href="https://github.com/hazytint/gduth3c" target="_blank" rel="external">gduth3c</a> 源码</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/hazytint/gduth3c.git package/gduth3c</span><br></pre></td></tr></table></figure>
<p>设置准备编译的</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make defconfig</span><br><span class="line">make prereq</span><br><span class="line">make menuconfig</span><br></pre></td></tr></table></figure>
<p>进入定制界面（里面可以选择芯片的型号，集成的组件等等，根据实际情况选择）</p>
<p>/ 搜索</p>
<p>方向键 移动光标</p>
<p>回车键 确认</p>
<p>空格键 切换 M  *</p>
<p><code>&lt;M&gt;</code>表示编译成ipk，不集成在固件里，可以用OPKG软件包管理器进行安装</p>
<p><code>&lt;*&gt;</code>表示集成在固件中。</p>
<p>例如：</p>
<blockquote>
<p>Target System –&gt; AR71xx/AR9xxx CPU型号<br>Target Profile –&gt; GL-iNet<br>LuCI –&gt; Collections –&gt; &lt;*&gt; luci \\添加LuCI，这样才自带网页设置<br>LuCI –&gt; (Moudles) –&gt; Translations –&gt; &lt;*&gt; Chinese \\添加中文<br>Kernel modules –&gt; Native Language Support –&gt; &lt;*&gt; kmod-nls-utf8 \\添加UTF8编码<br>Utilities –&gt; &lt;*&gt;gduth3c<br>Exit –&gt; Yes 退出并保存</p>
</blockquote>
<p>编译</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">make V=s  //编译所选的(包括固件)</span><br><span class="line"><span class="comment">#或</span></span><br><span class="line">make package/gduth3c/compile V=s //编译单个ipk，注意 Utilities--&lt;M&gt;gduth3c</span><br></pre></td></tr></table></figure>
<p>路由器固件在 <code>openwrt/bin/ar71xx/</code></p>
<p>ipk 文件在 <code>openwrt/bin/ar71xx/packages/base/</code></p>
<h2 id="u8BBE_u7F6E_u3001_u5B89_u88C5_ipk"><a href="#u8BBE_u7F6E_u3001_u5B89_u88C5_ipk" class="headerlink" title="设置、安装 ipk"></a>设置、安装 ipk</h2><p>利用编译好的bin刷机(可选)</p>
<p>接通电源，用网线连通路由器 LAN 端口和电脑。</p>
<p>打开 192.168.1.1</p>
<ol>
<li><p>系统 –&gt; 管理权 –&gt; 填入主机密码。</p>
</li>
<li><p>网络 –&gt; 接口 –&gt; WAN –&gt; 修改 –&gt; 高级设置 –&gt; 克隆MAC地址（填入电脑网卡的 MAC 地址）</p>
</li>
</ol>
<p>之前选择<code>Utilities -&gt; &lt;*&gt;gduth3c</code> 的，只需执行第 2/4 条</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scp gduth3c_1.<span class="number">0</span>-<span class="number">1</span>_ar71xx.ipk root@<span class="number">192.168</span>.<span class="number">5.1</span>:/tmp  //将文件传到路由器的/tmp目录</span><br><span class="line">ssh root@<span class="number">192.168</span>.<span class="number">1.1</span>       //登录ssh</span><br><span class="line">opkg install /tmp/gduth3c_1.<span class="number">0</span>-<span class="number">1</span>_ar71xx.ipk</span><br><span class="line">gduth3c -u [username] -p [password] -i [interface] //测试能否通过校园网认证</span><br></pre></td></tr></table></figure>
<p>[interface]是接口，一般是 eth0，要对应你的 WAN 口，在<code>网络 -&gt; 接口</code>里就可以查看。</p>
<p>Windows 下推荐使用 <a href="https://git-scm.com/" target="_blank" rel="external">Git for Windows</a></p>
<h2 id="u5B89_u88C5_u652F_u6301_u5F00_u673A_u542F_u52A8_u7684_gduth3c__u767B_u5F55_u9875_u9762_28_u53EF_u9009_29"><a href="#u5B89_u88C5_u652F_u6301_u5F00_u673A_u542F_u52A8_u7684_gduth3c__u767B_u5F55_u9875_u9762_28_u53EF_u9009_29" class="headerlink" title="安装支持开机启动的 gduth3c 登录页面(可选)"></a>安装支持开机启动的 gduth3c 登录页面(可选)</h2><p>下载 预编译的全平台 ipk : <a href="/files/luci-app-gduth3c_1.0-1_all.ipk">luci-app-gduth3c_1.0-1_all.ipk</a></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp luci-app-gduth3c_1.<span class="number">0</span>-<span class="number">1</span>_all.ipk root@<span class="number">192.168</span>.<span class="number">1.1</span>:/tmp</span><br><span class="line">ssh root@<span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line">opkg install /tmp/luci-app-gduth3c_1.<span class="number">0</span>-<span class="number">1</span>_all.ipk</span><br></pre></td></tr></table></figure>
<p>登录页面在「网络 –&gt; gduth3c」</p>
<p>也可以自己编译</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/dgeibi/luci-app-gduth3c.git package/luci-app-gduth3c</span><br></pre></td></tr></table></figure>
<p><code>make menuconfig</code> 后在 <code>LuCI -&gt; Applications</code> 里选择</p>
<h2 id="u76F4_u63A5_u521B_u5EFA_u5F00_u673A_u542F_u52A8_u811A_u672C_28_u53EF_u9009_29"><a href="#u76F4_u63A5_u521B_u5EFA_u5F00_u673A_u542F_u52A8_u811A_u672C_28_u53EF_u9009_29" class="headerlink" title="直接创建开机启动脚本(可选)"></a>直接创建开机启动脚本(可选)</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">ssh root@<span class="number">192.168</span>.<span class="number">1.1</span></span><br><span class="line">vi /etc/init.d/gduth3c</span><br><span class="line">-----</span><br><span class="line"><span class="comment">#!/bin/sh /etc/rc.common</span></span><br><span class="line"></span><br><span class="line">START=<span class="number">99</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">start</span></span>() &#123;</span><br><span class="line">   sleep <span class="number">8</span></span><br><span class="line">   gduth3c -u [username] -p [password] -i [interface] &amp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">stop</span></span>() &#123;</span><br><span class="line">    killall gduth3c</span><br><span class="line">    killall udhcpc</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>启用开机启动项</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/gduth3c  //加上可执行属性</span><br><span class="line">/etc/init.d/gduth3c <span class="built_in">enable</span>    //开启开机自动运行</span><br></pre></td></tr></table></figure>
<h2 id="u53E6_u4E00_u4E2A_GDUT__u4E13_u7528_u7684_u8BA4_u8BC1_u8F6F_u4EF6"><a href="#u53E6_u4E00_u4E2A_GDUT__u4E13_u7528_u7684_u8BA4_u8BC1_u8F6F_u4EF6" class="headerlink" title="另一个 GDUT 专用的认证软件"></a>另一个 GDUT 专用的认证软件</h2><p><a href="https://github.com/hazytint/gdut8021xclient" target="_blank" rel="external">gdut8021xclient</a></p>
<p>编译 <code>gdut8021xclient</code> 时需先把 clone 得到的文件夹改名为 <code>njit8021xclient</code></p>
<p>还要将根目录里的 <code>Makefile _OpenWrt</code> 改为 <code>Makefile</code>，<code>make menuconfig</code> 后在 <code>Network</code> 里选择。</p>
<h2 id="u7F16_u8BD1_u6210_u679C"><a href="#u7F16_u8BD1_u6210_u679C" class="headerlink" title="编译成果"></a>编译成果</h2><p>Built for Chaos Calmer 15.05</p>
<p><a href="/files/gduth3c_1.0-1_ar71xx.ipk">gduth3c_1.0-1_ar71xx.ipk</a></p>
<p><a href="/files/luci-app-gduth3c_1.0-1_all.ipk">luci-app-gduth3c_1.0-1_all.ipk</a></p>
<p><a href="/files/libpcap_1.5.3-1_ar71xx.ipk">libpcap_1.5.3-1_ar71xx.ipk</a></p>
<p><a href="/files/njit8021xclient_1.3-testing_ar71xx.ipk">njit8021xclient_1.3-testing_ar71xx.ipk</a></p>
<p><a href="/files/luci-app-njitclient_1.0-1_all.ipk">luci-app-njitclient_1.0-1_all.ipk</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="u53C2_u8003_u8D44_u6599"><a href="#u53C2_u8003_u8D44_u6599" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://wiki.openwrt.org/doc/howto/buildroot.exigence">OpenWrt build system – Installation</a></p>
<p><a href="http://young523.com/?p=102">自己编译集成了shadowsocks的openwrt固件</a></p>
<p><a href="http://www.7forz.com/1973/">【详细教程】编译openwrt + njit-client 1.3，通过iNode认证</a></p>
<h2 id="u9009_u8D2D_u8DEF_u7531_u5668"><a href="#u9009_u8D2D_u8DEF_u7531_u5668" class="headerlink" title="选购路由器"></a>选购路由器</h2><p>配置挺高，实惠的 Newifi Mini 受 OpenWrt 官方支持，可参照 <a href="https://linuxtoy.org/archives/install-openwrt-on-newifi-mini.html">Newifi Mini 安装 OpenWrt</a> 刷入固件</p>
<p>注：刷 OpenWrt 的最低配置是 4MB Flash、32MB RAM</p>
<p>没钱就买某宝上已经刷好 OpenWrt 的 TP-Link wr740N、 wr841n，价格一般在 30-40 RMB 之间，它们的cpu都是 ar71xx 系列</p>]]>
    
    </summary>
    
      <category term="Network" scheme="https://dgeibi.github.io/tags/Network/"/>
    
      <category term="OpenWrt" scheme="https://dgeibi.github.io/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[重装或升级 Windows]]></title>
    <link href="https://dgeibi.github.io/2015/08/05/install-windows/"/>
    <id>https://dgeibi.github.io/2015/08/05/install-windows/</id>
    <published>2015-08-05T08:38:38.000Z</published>
    <updated>2016-02-02T09:14:30.599Z</updated>
    <content type="html"><![CDATA[<h3 id="u5907_u4EFDC_u76D8_u7684_u91CD_u8981_u6587_u4EF6"><a href="#u5907_u4EFDC_u76D8_u7684_u91CD_u8981_u6587_u4EF6" class="headerlink" title="备份C盘的重要文件"></a>备份C盘的重要文件</h3><h3 id="u4E0B_u8F7D"><a href="#u4E0B_u8F7D" class="headerlink" title="下载"></a>下载</h3><p>1）系统镜像</p>
<p>需要免费升级win10的用户请下载对应版本的<a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO" target="_blank" rel="external">镜像</a></p>
<a id="more"></a>
<ul>
<li>Windows7简易版、家庭普通版、家庭高级版 –&gt; Windows10家庭版</li>
<li>Win7专业版和旗舰版 –&gt; Win10专业版</li>
<li>Win8/Win8.1 –&gt; Win10家庭版</li>
<li>Win8/Win8.1专业版 –&gt; Win10专业版</li>
<li>Win8.1/Win8中文版 –&gt; Win10家庭中文版</li>
<li>Win8.1 含Bing（必应）版 –&gt; Win10家庭版</li>
<li>Win8.1/Win8单语言版 –&gt; Win10家庭单语言版</li>
</ul>
<p>注意：下载列表中 N 是欧洲版和 KN 是韩版；Win10专业版/家庭版包含在列表的“Windows 10”里，其实也可以下下面的镜像</p>
<p>Windows 10 (Multiple Editions), Version 1511 (x64) - DVD (Chinese-Simplified)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ed2k://|file|cn_windows_10_multiple_editions_version_1511_x64_dvd_7223622.iso|4187224064|FE3F221D193FEF02627F7F8CF0041BB3|/</span><br></pre></td></tr></table></figure>
<p>更多镜像见 <a href="http://msdn.itellyou.cn/" target="_blank" rel="external">MSDN，我告诉你</a></p>
<p>2）搜索、下载、安装 EasyBCD</p>
<h3 id="u91CD_u88C5_u6216_u5347_u7EA7_u7CFB_u7EDF"><a href="#u91CD_u88C5_u6216_u5347_u7EA7_u7CFB_u7EDF" class="headerlink" title="重装或升级系统"></a>重装或升级系统</h3><h4 id="u91CD_u88C5_28_u683C_u5F0F_u5316_29"><a href="#u91CD_u88C5_28_u683C_u5F0F_u5316_29" class="headerlink" title="重装(格式化)"></a>重装(格式化)</h4><p>将准备好的系统镜像解压至一非系统分区 (非C盘) 的任意目录（目录最好不要包含非英文字符）</p>
<blockquote>
<p>关于 WIN10 免费升级的提示：在 Win10 镜像里的 Sources 文件夹下找到名为<code>gatherosstate.exe</code>的程序，将其复制到桌面。双击运行 <code>gatherosstate.exe</code>，稍等片刻，它将会在桌面上生成一个名为<code>GenuineTicket.xml</code>的文件。从文件命名就能看出，<code>GenuineTicket.xml</code> 就是「正版通行证」的意思，它里面保存了当前电脑的系统激活信息，你可以用U盘将它保存好，后面我们将会需要这个文件。</p>
</blockquote>
<p>打开 EasyBCD</p>
<p>添加新条目 –&gt;　WinPE</p>
<ul>
<li>类型：WIM映像</li>
<li>名称：随意</li>
<li>路径： 选择之前解压得到的目录的 <code>sources\boot.win</code></li>
</ul>
<p>–&gt; 添加条目 –&gt; 重启电脑 –&gt; 选择刚刚随意填的条目</p>
<p>开始安装</p>
<p><img src="/image/install-windows/05.jpg" alt=""></p>
<p><img src="/image/install-windows/06.jpg" alt=""></p>
<p>▲语言、区域和输入法设置，中国用户使用默认即可，点击“下一步”继续</p>
<p><img src="/image/install-windows/07.jpg" alt=""></p>
<p>▲点击“现在安装”</p>
<p><img src="/image/install-windows/08.jpg" alt=""></p>
<p>▲安装密钥：</p>
<p>WIN10：“没有安装密钥”；选择与原系统对应版本以免费升级</p>
<p>WIN8.1：XHQ8N-C3MCJ-RQXB6-WCHYG-C9WKB</p>
<p><img src="/image/install-windows/09.jpg" alt=""></p>
<p>▲勾选“我接受许可条款”后，点击“下一步”继续</p>
<p><img src="/image/install-windows/10.jpg" alt=""></p>
<p>▲由于我们目前执行纯净安装，因此要选择第二项“自定义”安装方式</p>
<p><img src="/image/install-windows/11.jpg" alt=""></p>
<p>▲先将当前系统盘（根据分区大小判断）格式化，并选择这个分区，然后“下一步”即可</p>
<p><img src="/image/install-windows/12.jpg" alt=""></p>
<p>▲此后，Windows 安装程序要至少重启两次，耐心等待30分钟左右将进入后续设置。后续设置很简单，这里就跳过了。</p>
<blockquote>
<p>关于 WIN10 免费升级的提示：待 Win10 安装完成并进入桌面后，按键盘 Win+R 快捷键，打开“运行”，输入 <code>%ProgramData%\Microsoft\Windows\ClipSVC\GenuineTicket</code> 并点确定<br>这时系统会打开一个文件夹，将之前生成的 <code>GenuineTicket.xml</code> 文件复制到这个文件夹中。<br>确保电脑正常联网然后重启电脑。待电脑重启后，稍等片刻 Win10 将会自动进行激活。如果没有，手工进入“设置”，点击窗口底部的 “Windows没有激活。请立即激活Windows” 链接，然后点击 “在线激活Windows” 下的 “激活” 按钮即可手工激活。</p>
</blockquote>
<h4 id="u5347_u7EA7_u7CFB_u7EDF_uFF08_u4E0D_u683C_u5F0F_u5316_uFF09"><a href="#u5347_u7EA7_u7CFB_u7EDF_uFF08_u4E0D_u683C_u5F0F_u5316_uFF09" class="headerlink" title="升级系统（不格式化）"></a>升级系统（不格式化）</h4><p>将下载好的 iso 文件解压到非系统盘的任意位置</p>
<p>打开该位置根目录的 setup.exe</p>
<p>按照提示升级便可。</p>
<p>升级完后如果不想回到以前的系统可以删掉系统盘的 Windows.old 文件夹</p>
<h3 id="u6FC0_u6D3B"><a href="#u6FC0_u6D3B" class="headerlink" title="激活"></a>激活</h3><p>注：激活过程保持联网</p>
<p>按键盘 Win+X 快捷键，选择“命令提示符（管理员）”</p>
<p>输入如下命令</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">slmgr /upk&#10;slmgr /ipk XXXXX-XXXXX-XXXXX-XXXXX-XXXXX</span><br></pre></td></tr></table></figure>
<p>注：XXXXX-XXXXX-XXXXX-XXXXX-XXXXX 是你购买的正版密钥。</p>
<p>稍等片刻，你可以在“系统”(按键盘 Win+X 快捷键，选择“系统”）中发现“Windows 已激活”。</p>
<h3 id="u66F4_u65B0_u9A71_u52A8"><a href="#u66F4_u65B0_u9A71_u52A8" class="headerlink" title="更新驱动"></a>更新驱动</h3><p>刚装完系统，Windows 一般会自动更新驱动等。</p>
<p>系统更新完并重启之后，按键盘 Win+X 快捷键，选择“设备管理器”，如果没有感叹号，说明驱动都正常工作了，若有就右键有黄色感叹号的项目，进行联网更新。</p>
<p>感叹号没消失，一般可以去找设备的官网按型号、系统下驱动。</p>
<p>再不行就装“驱动精灵”，“鲁大师”等，有开机黑屏的风险哦！</p>
<h3 id="u53C2_u8003"><a href="#u53C2_u8003" class="headerlink" title="参考"></a>参考</h3><ul>
<li><a href="http://www.ithome.com/html/win10/163188.htm" target="_blank" rel="external">免费用正版Win10完全攻略</a></li>
<li><a href="http://www.ithome.com/html/win10/166773.htm" target="_blank" rel="external">Win7/Win8.1升级Win10正式版后如何全新安装系统？</a></li>
<li><a href="http://www.iplaysoft.com/clean-install-windows10-activate.html" target="_blank" rel="external">跳过从Win7/8升级，直接格式化全新安装 Windows 10 并自动永久激活系统的方法教程</a></li>
<li><a href="http://www.ithome.com/html/win10/152882.htm" target="_blank" rel="external">对应版本的信息来源</a></li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="u5907_u4EFDC_u76D8_u7684_u91CD_u8981_u6587_u4EF6"><a href="#u5907_u4EFDC_u76D8_u7684_u91CD_u8981_u6587_u4EF6" class="headerlink" title="备份C盘的重要文件"></a>备份C盘的重要文件</h3><h3 id="u4E0B_u8F7D"><a href="#u4E0B_u8F7D" class="headerlink" title="下载"></a>下载</h3><p>1）系统镜像</p>
<p>需要免费升级win10的用户请下载对应版本的<a href="https://www.microsoft.com/zh-cn/software-download/windows10ISO">镜像</a></p>]]>
    
    </summary>
    
      <category term="Windows" scheme="https://dgeibi.github.io/tags/Windows/"/>
    
  </entry>
  
</feed>
